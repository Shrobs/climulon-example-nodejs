{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template for Climulon NodeJs Example (REDIS)",
  "Parameters": {
    "VpcId": {
      "Type": "String",
      "Description": "VPC Id of the VPS created in the shared template"
    },
    "SubnetIds": {
      "Type": "CommaDelimitedList",
      "Description": "Ids of the subnets in the shared template"
    },
    "RedisVersion": {
      "Type": "String",
      "Description": "Redis version",
      "Default": "3.2.4"
    },
    "RedisNodeType": {
      "Type": "String",
      "Description": "Type of redis node instances",
      "AllowedValues": [
        "cache.t2.micro",
        "cache.t2.small",
        "cache.t2.medium",
        "cache.m3.medium",
        "cache.m3.large",
        "cache.m3.xlarge",
        "cache.m3.2xlarge",
        "cache.m4.large",
        "cache.m4.xlarge",
        "cache.m4.2xlarge",
        "cache.m4.4xlarge",
        "cache.m4.10xlarge",
        "cache.r3.large",
        "cache.r3.xlarge",
        "cache.r3.2xlarge",
        "cache.r3.4xlarge",
        "cache.r3.8xlarge"
      ]
    },
    "RedisClusterName": {
      "Type": "String",
      "Description": "Redis cluster name"
    },
    "RedisPort": {
      "Type": "Number",
      "Description": "Port of the Redis cluster",
      "Default": "6379"
    },
    "SharedSecurityGroup": {
      "Type": "String",
      "Description": "Shared Security group for ECS/REDIS in shared template"
    }
  },
  "Resources": {
    "Redis": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "Port": {
          "Ref": "RedisPort"
        },
        "EngineVersion": {
          "Ref": "RedisVersion"
        },
        "ClusterName": {
          "Ref": "RedisClusterName"
        },
        "AutoMinorVersionUpgrade": true,
        "Engine": "redis",
        "CacheNodeType": {
          "Ref": "RedisNodeType"
        },
        "NumCacheNodes": "1",
        "VpcSecurityGroupIds": [
          {
            "Ref": "RedisSecurityGroup"
          }
        ],
        "CacheSubnetGroupName": {
          "Ref": "RedisSubGroup"
        }
      }
    },
    "RedisSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Redis Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": {
              "Ref": "RedisPort"
            },
            "ToPort": {
              "Ref": "RedisPort"
            },
            "SourceSecurityGroupId":
              {
                "Ref": "SharedSecurityGroup"
              }
          }
        ]
      }
    },
    "RedisSubGroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "Subgroup for redis for app : ",
        "SubnetIds": {
          "Ref": "SubnetIds"
        }
      }
    }
  },
  "Outputs": {
    "RedisURL": {
      "Description": "Redis URL",
      "Value": {
        "Fn::GetAtt": [
          "Redis",
          "RedisEndpoint.Address"
        ]
      }
    }
  }
}